int x(int y, int z)
{
	return y + z;
}

int main()
{
	int result = x(1);			// Incorrect number of arguments
	int x = 1;
	bool y = false;
	int z = x + false; 			// Operands not valid
	bool x = false and true;	// x already declared
	bool z = y and x;			// z already declared and operands non-matching
	int l = 1 + w;				// w undeclared
	int res = x(1,2);			// x has been redefined and is no longer a function
	while (1)					// Invalid condition
	{
		bool x = true;			// Legal redefinition within inner block
		bool z = x or false;	// Legal redefinition which uses new x binding
	}
	int op_neq_ops = true + true;	// Operands compatible but not with operation
	[int, 10] array;
	int k = array.2;			// Illegal access (array not a register)
	<int,int> pair;
	int first = pair[0];		// Illegal access (register not an array)
	return 0;
}