// File for testing semantic analysis

int x(int y, int z)
{
	return y + z;
}

int fun(int x)
{
	switch(x + 2) {
		case 5:	 {x=9;}
		case 9:  {x=5;}
		case 5:	 {x=9;}	// Repeated case in switch
	}
	return 1;
}

int fun2(int x)
{
	switch(x + 2) {
		case 5:	 {int y = 9;}
		case 9:  {y = 10;}		// y is totally out of scope 
	}
	return 1;
}


int main()
{
	int result = x(1);			// Incorrect number of arguments
	int x = true;
	bool y = false;
	int z = x + false; 			// Operands not valid
	bool x = false and true;	// x already declared
	bool badbool;
	badbool = 1;
	int l = 1 + w;				// w undeclared
	int res = x(1,2);			// x has been redefined and is no longer a function
	while (1)					// Invalid condition
	{
		bool x = true;			// Legal redefinition within inner block
		bool z = x or false;	// Legal redefinition which uses new x binding
	}
	int op_neq_ops = true + true;	// Operands compatible but not with operation
	[int, 10] array;
	int k = array.2;			// Illegal access (array not a register)
	<int,int> pair;
	int first = pair[0];		// Illegal access (register not an array)
	return 0;
}