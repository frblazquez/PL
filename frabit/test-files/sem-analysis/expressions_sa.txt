// File for testing errors in expressions display and recovery

int funInt(){
	return 0;
}

bool funBool(){
	return false;
}

*int funPtr(){
	return null;
}

int main(){

	int x1;
	int x2;
	int x3;
	bool y1;
	bool y2;
	bool y3;
	*int ptr1;
	*int ptr2;
	*bool ptr3;
	*bool ptr4;
	
	// TODO: IMPORTANT!
	// What to do if a variable is used uninitialized?
	
	x1 = (1 + x2)*x3/4;
	x2 = funInt() + x3;		// Explodes!
	x3 = (1 + x1) * y1;
	x1 = & (x1 + x3);
	x2 = funInt() + x3;
	x3 = (1 + x1) * y1;
	x1 = (null + 5)*x1;
	x2 = true or false;
	
	y1 = true or false;
	y2 = true + false;
	y2 = true - y1;
	y2 = y2 * false;
	y2 = funBool() / false;
	
	y1 = 1 == 2;
	y1 = funInt() != 1;
	y1 = x1 >= 1;
	y1 = 2 >= x1;
	y1 = x2 > x1;
	y1 = x2 < x1;
	y1 = x2 <= funInt();
	
	y1 = 1 == true;
	y1 = null != 1;
	y1 = &x1 >= 1;
	y1 = 2 >= y1;
	y1 = x2 > x1;
	y1 = x2 * x1;
	y1 = x2 + funInt();
	
	ptr1 = &x1;
	ptr1 = &x2;
	ptr1 = &y1;
	ptr1 = &ptr1;
	ptr1 = null;
	ptr2 = &x3;
	ptr1 = 2 >= x1;
	ptr1 = x2 + x1;
	ptr1 = x2 <= funInt();
	
	ptr3 = &y1;	
	ptr3 = &y2;	
	ptr3 = &x1;	
	ptr3 = &ptr1;	
	ptr4 = null;	
	ptr3 = &x3;	
	ptr3 = 2 >= x1;	
	ptr3 = x2 + x1;	
	ptr3 = x2 <= funBool();
	
	ptr1 = ptr4;
	ptr3 = ptr2;
	
	return 0;
}