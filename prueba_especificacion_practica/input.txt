// BÃºsqueda binaria en un vector
int busqbin(*int vector, int iz, int de, int elem){
int devuelve = -1;
while(iz <= de){
int m = iz + (de - iz) / 2;
if (vector[m] == x){
devuelve = m;
}else {
if (vector[m] < x) {
iz = m + 1 ;
}else { de = m - 1 ; }
}
}
return devuelve ;
}

// blbalblal
int fibonacci(int n){
	<int,int> lasts;
	lasts[0] = 0;
	lasts[1] = 1;
	int aux;

	while (n >= 1){
		aux = lasts.0 + lasts.1;
		lasts.0 = lasts.1;
		lasts.1 = aux;
		n = n - 1;
	}
	return lasts.1;
}

void inicializaMatriz(*int matriz, int n, int m){
	int i = 0;
	int j = 0;
	while (i < n)
	{
		while (j < m){
			matriz[i][j] = i + n*j;
			j = j + 1;
		}
		i = i + 1;
	}
}

int main(){
	[int, 10] array;
	int k = 0;
	while (k < 10) {array[k] = k*k; k = k + 1;}
	int j = busqbin(array,0,SIZE - 1,16);
	
	switch(j){
		case 0:	{print(string_primer_elemento);}
		case -1: {print(string_no_encontrado);}
		default: {print(string_encontrado);}
	}

	[[int, 10], 8] matriz;
	inicializaMatriz(matriz,8,10);
	int i = 0;
	int j = 0;
	while (i < 8){
		j = 0;
		while (j < 10){
			print(matriz[i][j]);
			j = j + 1;
		}
		i = i + 1;
	}
	return 0;
}